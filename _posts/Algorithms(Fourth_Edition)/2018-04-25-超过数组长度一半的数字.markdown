---
layout:     post
title:      "超过数组长度一半的数字"
subtitle:   " \"Hello World, Hello Blog\""
date:       2018-04-25 19:00:00
author:     "suny"
catalog: false
categories: Algorithms
tags:
    - 笔记
---

题目描述
数组中有一个数字出现的次数超过数组长度的一半，请找出这个数字。例如输入一个长度为9的数组{1,2,3,2,2,2,5,4,2}。由于数字2在数组中出现了5次，超过数组长度的一半，因此输出2。如果不存在则输出0。

思路：遍历分别存入字典中，找到数量大于长度一半的返回

第一次
	abc
	bac
	cab
第二次 也到了倒数第二个字符开始往列表中添加结果

	abc acb
	bac bca
	cab cba
	['abc','acb','bac','bca','cab','cba']




python 测试代码(直接导包，非常简单)


		# -*- coding:utf-8 -*-
		from collections import Counter
		class Solution:
		    def MoreThanHalfNum_Solution(self, numbers):
		        # write code here
		        dict1 = Counter(numbers)
		        print(dict1)
		        for i in dict1.keys():
		            if dict1[i] > len(numbers)/2:
		                return i
		        return 0

python 测试代码（对上面的包进行原理实现）


				# -*- coding:utf-8 -*-
				from collections import Counter
				class Solution:
				    def MoreThanHalfNum_Solution(self, numbers):
				        # write code here
				        dict1 = {}
				        for i in numbers:
				            if i not in dict1:
				                dict1[i] = 1
				            else:
				                dict1[i]+=1
				        for i in dict1.keys():
				            if dict1[i] > len(numbers)/2:
				                return i
				        return 0
